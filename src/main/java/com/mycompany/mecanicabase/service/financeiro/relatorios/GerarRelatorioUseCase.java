package com.mycompany.mecanicabase.service.financeiro.relatorios;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import com.mycompany.mecanicabase.model.financeiro.OrdemDeServico;
import com.mycompany.mecanicabase.model.financeiro.PecaItem;
import com.mycompany.mecanicabase.model.financeiro.ServicoItem;

/**
 * Caso de uso respons√°vel por gerar um relat√≥rio detalhado com os servi√ßos
 * realizados e pe√ßas vendidas em um intervalo de tempo.
 */
public class GerarRelatorioUseCase {

    /**
     * Gera um relat√≥rio de vendas e servi√ßos com base no intervalo de datas
     * fornecido.
     *
     * @param dataInicio Data/hora inicial do intervalo de consulta.
     * @param dataFinal Data/hora final do intervalo de consulta.
     * @return Uma String formatada contendo o relat√≥rio detalhado.
     */
    public String use(LocalDateTime dataInicio, LocalDateTime dataFinal) {

        // Lista para armazenar servi√ßos dentro do per√≠odo especificado
        List<ServicoItem> servicosFeitos = new ArrayList<>();

        // Lista para armazenar pe√ßas vendidas no mesmo intervalo
        List<PecaItem> pecasVendidas = new ArrayList<>();

        // Vari√°veis de controle para somar valores
        float totalServicos = 0;
        float totalPecas = 0;

        // Percorre todas as ordens de servi√ßo registradas
        for (OrdemDeServico os : OrdemDeServico.instances) {

            // Verifica todos os servi√ßos da ordem
            for (ServicoItem si : os.getServicos()) {

                // Se o servi√ßo estiver dentro do per√≠odo de interesse
                if (!si.getCriadoEm().isBefore(dataInicio) && !si.getCriadoEm().isAfter(dataFinal)) {
                    servicosFeitos.add(si);                          // Adiciona √† lista
                    totalServicos += si.getValorUnitario();         // Soma o valor do servi√ßo
                }
            }

            // Verifica todas as pe√ßas vendidas da ordem
            for (PecaItem pi : os.getPecas()) {

                // Se a pe√ßa tiver sido vendida dentro do per√≠odo
                if (!pi.getCriadoEm().isBefore(dataInicio) && !pi.getCriadoEm().isAfter(dataFinal)) {
                    pecasVendidas.add(pi);                          // Adiciona √† lista
                    totalPecas += pi.getValorUnitario() * pi.getQuantidade(); // Soma valor * quantidade
                }
            }
        }

        // Constr√≥i o relat√≥rio textual
        StringBuilder relatorio = new StringBuilder();

        relatorio.append("RELAT√ìRIO DE VENDAS E SERVI√áOS\n");
        relatorio.append("Per√≠odo: ").append(dataInicio.toLocalDate())
                .append(" a ").append(dataFinal.toLocalDate()).append("\n\n");

        // Lista de servi√ßos realizados
        relatorio.append("üõ†Ô∏è Servi√ßos realizados:\n");
        for (ServicoItem si : servicosFeitos) {
            String nomeServico = si.getServico() != null ? si.getServico().getTipo() : "Desconhecido";
            relatorio.append("- ").append(nomeServico)
                    .append(" ‚Äì R$ ").append(String.format("%.2f", si.getValorUnitario()))
                    .append("\n");
        }

        // Lista de pe√ßas vendidas
        relatorio.append("\nüî© Pe√ßas vendidas:\n");
        for (PecaItem pi : pecasVendidas) {
            String nomePeca = pi.getPeca() != null ? pi.getPeca().getNome() : "Desconhecida";
            relatorio.append("- ").append(nomePeca)
                    .append(" x").append(pi.getQuantidade())
                    .append(" ‚Äì R$ ").append(String.format("%.2f", pi.getValorUnitario() * pi.getQuantidade()))
                    .append("\n");
        }

        // Totais
        relatorio.append("\nüí∞ Totais:\n");
        relatorio.append("- Total em servi√ßos: R$ ").append(String.format("%.2f", totalServicos)).append("\n");
        relatorio.append("- Total em pe√ßas: R$ ").append(String.format("%.2f", totalPecas)).append("\n");
        relatorio.append("- TOTAL GERAL: R$ ").append(String.format("%.2f", totalServicos + totalPecas)).append("\n");

        return relatorio.toString();
    }
}
