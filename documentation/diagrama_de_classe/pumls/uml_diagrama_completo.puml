@startuml
skinparam dpi 150
skinparam classAttributeIconSize 0
skinparam classFontSize 10
skinparam wrapWidth 100
top to bottom direction

class MecanicaBase {
}
class AgendamentoController {
  +criarAgendamentoComAlocacao()
}
class ClienteController {
  +criar()
  +listar()
  +listar()
  +buscarPorId()
  +atualizar()
  +remover()
}
class MainViewController {
  - btnClientes : MFXButton
  - btnOficina : MFXButton
  - btnServicos : MFXButton
  - btnAgendamentos : MFXButton
  - btnOrdemServico : MFXButton
  - btnColaboradores : MFXButton
  - btnFinanceiro : MFXButton
  - adminSection : VBox
  +initialize()
  +abrirClientes()
  +abrirOficina()
  +abrirServicos()
  +abrirAgendamentos()
  +abrirOrdens()
  +abrirColaboradores()
  +abrirFinanceiro()
}
interface Autenticavel <<interface>> {
}
class Crud {
  +validarCriacao()
  +validarAtualizacao()
  +buscarPorId()
  +buscarPorId()
  +listarTodos()
  +removerPorId()
  +criar()
  +atualizar()
}
class "Entity" {
  - id : final UUID
  - criadoEm : final LocalDateTime
  - atualizadoEm : LocalDateTime
  +touch()
  +getId()
  +getCriadoEm()
  +getAtualizadoEm()
}
class Session {
  - pessoaLogado : static Colaborador
}
class BenchmarkPecasAplicadas {
}
class JasyptCrypto {
  - encryptor : static final StandardPBEStringEncryptor
}
class Database {
}
class PecaFactory {
}
class Agendamento {
  - data : LocalDateTime
  - descricaoProblema : String
  - status : StatusAgendamento
  - ordemDeServico : UUID
  - servico : UUID
  - elevador : UUID
  - funcionario : UUID
  - veiculo : UUID
  +getData()
  +setData()
  +getDescricaoProblema()
  +setDescricaoProblema()
  +getStatus()
  +setStatus()
  +getServico()
  +setServico()
  +getOrdemDeServico()
  +setOrdemDeServico()
  +getFuncionario()
  +setFuncionario()
  +getVeiculo()
  +setVeiculo()
  +getElevador()
  +setElevador()
  +compareTo()
  +toString()
}
class CategoriaDespesa {
  - titulo : final String
  +getTitulo()
  +toString()
}
class Despesa {
  - descricao : String
  - valor : float
  - categoriaId : final UUID
  +getDescricao()
  +setDescricao()
  +getValor()
  +setValor()
  +getCategoria()
  +toString()
}
class OrdemDeServico {
  - clienteId : UUID
  - status : StatusOrdemDeServico
  - finalizadoEm : LocalDateTime
  - servicos : final List<UUID>
  - pecas : final List<UUID>
  - agendamentos : final List<UUID>
  +getClienteId()
  +setClienteId()
  +getServicos()
  +getPecas()
  +getAgendamentos()
  +getStatus()
  +getFinalizadoEm()
  +setStatus()
  +addServico()
  +removeServicoPor()
  +addPeca()
  +removePeca()
  +addAgendamento()
  +removeAgendamento()
  +toString()
}
class PecaItem {
  - peca : UUID
  - quantidade : int
  - valorUnitario : float
  - ordemDeServico : final UUID
  +getPeca()
  +setPeca()
  +getQuantidade()
  +setQuantidade()
  +getValorUnitario()
  +setValorUnitario()
  +getOrdemDeServico()
  +toString()
}
class ServicoItem {
  - servico : UUID
  - valorUnitario : float
  - ordemDeServico : final UUID
  +getServico()
  +setServico()
  +getValorUnitario()
  +setValorUnitario()
  +getOrdemDeServico()
  +toString()
}
enum StatusAgendamento <<enum>> {
}
enum StatusOrdemDeServico <<enum>> {
}
class Elevador {
  - tipo : TipoElevador
  +getTipo()
  +setTipo()
  +toString()
}
class EntradaPeca {
  - quantidade : int
  - nomeFornecedor : String
  - custo : float
  - peca : UUID
  +getPecaId()
  +getPeca()
  +setPeca()
  +getQuantidade()
  +setQuantidade()
  +getNomeFornecedor()
  +setNomeFornecedor()
  +getCusto()
  +setCusto()
  +toString()
}
class Peca {
  - nome : String
  - valor : float
  - quantidade : int
  +getNome()
  +setNome()
  +getValor()
  +setValor()
  +getQuantidade()
  +setQuantidade()
  +reduzirEstoque()
  +adicionarEstoque()
  +toString()
}
class Servico {
  - tipo : String
  - preco : float
  - descricao : String
  - duracao : int
  - tipoFuncionario : TipoFuncionario
  - tipoElevador : TipoElevador
  - usaElevador : boolean
  +getTipo()
  +setTipo()
  +getPreco()
  +setPreco()
  +getDescricao()
  +setDescricao()
  +getDuracao()
  +setDuracao()
  +getTipoFuncionario()
  +setTipoFuncionario()
  +getTipoElevador()
  +setTipoElevador()
  +usaElevador()
  +setUsaElevador()
  +toString()
}
class Sistema {
  - totalVeiculos : static int
  +toString()
}
enum StatusVeiculo <<enum>> {
}
enum TipoElevador <<enum>> {
}
class Veiculo {
  - modelo : String
  - placa : String
  - anoFabricacao : int
  - cor : String
  - status : StatusVeiculo
  - clienteId : UUID
  +getModelo()
  +setModelo()
  +getPlaca()
  +setPlaca()
  +getAnoFabricacao()
  +setAnoFabricacao()
  +getCor()
  +setCor()
  +getStatus()
  +setStatus()
  +setCliente()
  +getCliente()
  +toString()
}
class Administrador {
  +toString()
}
class Cliente {
  - veiculos : final List<UUID>
  +addVeiculo()
  +removeVeiculo()
  +getVeiculos()
  +compareTo()
  +toString()
}
class Colaborador {
  - senha : String
  +getEmail()
  +compararSenha()
  +setSenha()
}
class Funcionario {
  - funcao : TipoFuncionario
  - salario : float
  +getFuncao()
  +setFuncao()
  +getSalario()
  +setSalario()
  +toString()
}
class Pessoa {
  - nome : String
  - email : String
  - cpf : String
  - telefone : String
  - endereco : String
  +getNome()
  +setNome()
  +getEmail()
  +setEmail()
  +getCpf()
  +setCpf()
  +getTelefone()
  +setTelefone()
  +getEndereco()
  +setEndereco()
}
enum TipoFuncionario <<enum>> {
}
class AgendamentoCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +buscarComFiltros()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class CategoriaDespesaCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class DespesaCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class OrdemDeServicoCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
  +removerPecaItem()
  +venderPeca()
}
class GerarBalancoUseCase {
  +use()
  +buscarOSFinalizadas()
  +buscarOSCriadas()
  +contarPorStatus()
  +calcularTotalServicos()
  +calcularTotalPecas()
  +top3Servicos()
  +top3Pecas()
  +funcionarioMaisAtivo()
  +buscarDespesasNoPeriodo()
  +calcularTotalDespesas()
  +formatarGastosPorCategoria()
}
class GerarRelatorioUseCase {
  +use()
}
class PecaCrud {
  +setUsarFlyweight()
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +registrarEntrada()
}
class ServicoCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class VeiculoCrud {
  +getInstancias()
  +getId()
  +buscarPorFiltro()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
  +removerPorId()
}
class AdministradorCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class ClienteCrud {
  +getInstancias()
  +getId()
  +buscarPorFiltro()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class FuncionarioCrud {
  +getInstancias()
  +getId()
  +criarInstancia()
  +atualizarInstancia()
  +validarCriacao()
  +validarAtualizacao()
}
class UsuarioCrud {
  +login()
}
class MainView {
  +start()
}
class AgendamentoTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +atualizarStatus()
  +cancelar()
}
class CategoriaDespesaTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +atualizar()
  +remover()
}
class ClienteTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +buscar()
  +atualizar()
  +remover()
}
class ColaboradorTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criarFuncionario()
  +criarAdministrador()
  +listarFuncionarios()
  +listarAdministradores()
  +atualizarFuncionario()
  +atualizarAdministrador()
  +removerFuncionario()
  +removerAdministrador()
}
class DespesaTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +atualizar()
  +remover()
}
class GerarBalancoTerminalHandler {
  - scanner : final Scanner
  +menu()
}
class GerarRelatorioTerminalHandler {
  - scanner : final Scanner
  +menu()
}
class LoginTerminalHandler {
  - scanner : final Scanner
  +login()
}
class OficinaTerminalHandler {
  - scanner : final Scanner
  - veiculoTerminalHandler : final VeiculoTerminalHandler
  - pecaTerminalHandler : final PecaTerminalHandler
  +menu()
}
class OrdemDeServicoTerminalHandler {
  - scanner : final Scanner
  +menu()
  +listar()
  +adicionarPeca()
  +finalizar()
}
class PecaTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +atualizar()
  +remover()
  +entradaManual()
  +importarCSV()
}
class ServicoTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +atualizar()
  +remover()
  +escolherTipoFuncionario()
  +escolherTipoFuncionarioOptional()
  +escolherTipoElevador()
  +perguntarBoolean()
  +perguntarFloat()
  +perguntarInt()
}
class VeiculoTerminalHandler {
  - scanner : final Scanner
  +menu()
  +criar()
  +listar()
  +buscar()
  +atualizar()
  +remover()
  +selecionarClientePorBusca()
  +selecionarVeiculoRecebido()
}
class TerminalRouter {
  +start()
  +executarBenchmark()
  +menuFinanceiro()
}
"Entity" <|-- Database
"Entity" <|-- Database
"Entity" <|-- Database
"Entity" <|-- Database
"Entity" <|-- Database
"Entity" <|-- Database
"Entity" <|-- Agendamento
Comparable <|-- Agendamento
"Entity" <|-- CategoriaDespesa
"Entity" <|-- Despesa
"Entity" <|-- OrdemDeServico
"Entity" <|-- PecaItem
"Entity" <|-- ServicoItem
"Entity" <|-- Elevador
"Entity" <|-- EntradaPeca
"Entity" <|-- Peca
"Entity" <|-- Servico
"Entity" <|-- Veiculo
Colaborador <|-- Administrador
Pessoa <|-- Cliente
Comparable <|-- Cliente
Pessoa <|-- Colaborador
Autenticavel <|-- Colaborador
Colaborador <|-- Funcionario
"Entity" <|-- Pessoa
Crud <|-- AgendamentoCrud
Crud <|-- CategoriaDespesaCrud
Crud <|-- DespesaCrud
Crud <|-- OrdemDeServicoCrud
Crud <|-- PecaCrud
Crud <|-- ServicoCrud
Crud <|-- VeiculoCrud
UsuarioCrud <|-- AdministradorCrud
Crud <|-- ClienteCrud
UsuarioCrud <|-- FuncionarioCrud
Autenticavel <|-- UsuarioCrud
Crud <|-- UsuarioCrud
Application <|-- MainView
Agendamento --> "1" StatusAgendamento
OrdemDeServico --> "1" StatusOrdemDeServico
Elevador --> "1" TipoElevador
Servico --> "1" TipoFuncionario
Servico --> "1" TipoElevador
Veiculo --> "1" StatusVeiculo
Funcionario --> "1" TipoFuncionario
AgendamentoController ..> Servico : <<use>> #888888
AgendamentoController ..> Veiculo : <<use>> #888888
AgendamentoController ..> OrdemDeServico : <<use>> #888888
AgendamentoController ..> Agendamento : <<use>> #888888
ClienteController ..> Cliente : <<use>> #888888
ClienteController ..> Cliente : <<use>> #888888
ClienteController ..> Cliente : <<use>> #888888
Agendamento ..> StatusAgendamento : <<use>> #888888
Agendamento ..> StatusAgendamento : <<use>> #888888
Agendamento ..> Servico : <<use>> #888888
Agendamento ..> OrdemDeServico : <<use>> #888888
Agendamento ..> Funcionario : <<use>> #888888
Agendamento ..> Veiculo : <<use>> #888888
Agendamento ..> Elevador : <<use>> #888888
Despesa ..> CategoriaDespesa : <<use>> #888888
OrdemDeServico ..> StatusOrdemDeServico : <<use>> #888888
OrdemDeServico ..> StatusOrdemDeServico : <<use>> #888888
PecaItem ..> Peca : <<use>> #888888
PecaItem ..> OrdemDeServico : <<use>> #888888
ServicoItem ..> Servico : <<use>> #888888
ServicoItem ..> OrdemDeServico : <<use>> #888888
Elevador ..> TipoElevador : <<use>> #888888
Elevador ..> TipoElevador : <<use>> #888888
EntradaPeca ..> Peca : <<use>> #888888
Servico ..> TipoFuncionario : <<use>> #888888
Servico ..> TipoFuncionario : <<use>> #888888
Servico ..> TipoElevador : <<use>> #888888
Servico ..> TipoElevador : <<use>> #888888
Veiculo ..> StatusVeiculo : <<use>> #888888
Veiculo ..> StatusVeiculo : <<use>> #888888
Veiculo ..> Cliente : <<use>> #888888
Funcionario ..> TipoFuncionario : <<use>> #888888
Funcionario ..> TipoFuncionario : <<use>> #888888
AgendamentoCrud ..> Agendamento : <<use>> #888888
AgendamentoCrud ..> Agendamento : <<use>> #888888
AgendamentoCrud ..> StatusAgendamento : <<use>> #888888
AgendamentoCrud ..> Agendamento : <<use>> #888888
AgendamentoCrud ..> Agendamento : <<use>> #888888
CategoriaDespesaCrud ..> CategoriaDespesa : <<use>> #888888
CategoriaDespesaCrud ..> CategoriaDespesa : <<use>> #888888
CategoriaDespesaCrud ..> CategoriaDespesa : <<use>> #888888
CategoriaDespesaCrud ..> CategoriaDespesa : <<use>> #888888
DespesaCrud ..> Despesa : <<use>> #888888
DespesaCrud ..> Despesa : <<use>> #888888
DespesaCrud ..> Despesa : <<use>> #888888
DespesaCrud ..> Despesa : <<use>> #888888
OrdemDeServicoCrud ..> OrdemDeServico : <<use>> #888888
OrdemDeServicoCrud ..> OrdemDeServico : <<use>> #888888
OrdemDeServicoCrud ..> OrdemDeServico : <<use>> #888888
OrdemDeServicoCrud ..> OrdemDeServico : <<use>> #888888
OrdemDeServicoCrud ..> PecaItem : <<use>> #888888
GerarBalancoUseCase ..> StatusOrdemDeServico : <<use>> #888888
PecaCrud ..> Peca : <<use>> #888888
PecaCrud ..> Peca : <<use>> #888888
PecaCrud ..> Peca : <<use>> #888888
PecaCrud ..> EntradaPeca : <<use>> #888888
ServicoCrud ..> Servico : <<use>> #888888
ServicoCrud ..> Servico : <<use>> #888888
ServicoCrud ..> Servico : <<use>> #888888
ServicoCrud ..> Servico : <<use>> #888888
VeiculoCrud ..> Veiculo : <<use>> #888888
VeiculoCrud ..> Veiculo : <<use>> #888888
VeiculoCrud ..> Veiculo : <<use>> #888888
VeiculoCrud ..> Veiculo : <<use>> #888888
AdministradorCrud ..> Administrador : <<use>> #888888
AdministradorCrud ..> Administrador : <<use>> #888888
AdministradorCrud ..> Administrador : <<use>> #888888
AdministradorCrud ..> Administrador : <<use>> #888888
ClienteCrud ..> Cliente : <<use>> #888888
ClienteCrud ..> Cliente : <<use>> #888888
ClienteCrud ..> Cliente : <<use>> #888888
ClienteCrud ..> Cliente : <<use>> #888888
FuncionarioCrud ..> Funcionario : <<use>> #888888
FuncionarioCrud ..> Funcionario : <<use>> #888888
FuncionarioCrud ..> Funcionario : <<use>> #888888
FuncionarioCrud ..> Funcionario : <<use>> #888888
ServicoTerminalHandler ..> TipoFuncionario : <<use>> #888888
ServicoTerminalHandler ..> TipoFuncionario : <<use>> #888888
ServicoTerminalHandler ..> TipoElevador : <<use>> #888888
VeiculoTerminalHandler ..> Cliente : <<use>> #888888
VeiculoTerminalHandler ..> Veiculo : <<use>> #888888

@enduml
